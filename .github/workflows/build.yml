name: SonarQube

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest

    steps:
      # Faz checkout do código no repositório
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Evita clone raso, necessário para uma análise completa

      # Configuração do JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'  # Distribuição alternativa do OpenJDK

      # Cache para pacotes do SonarQube
      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      # Cache para pacotes do Maven
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      # Adicionando passo de depuração para listar os diretórios
      - name: List directories
        run: ls -R

      # Navegar até o diretório onde está o pom.xml
      - name: Navigate to project directory
        run: cd HW1/api/bookingMoliceiro && pwd  # Caminho correto para o seu projeto e imprime o diretório atual

      # Rodar a análise com Maven
      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}  # Usando o token do SonarQube
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=brunotavaresz_tqs_113372
